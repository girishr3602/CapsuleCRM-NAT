<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="1" total="11" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="39067" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:30:05Z">
    <groups>
    </groups>
    <test name="Extent Report Test" duration-ms="314" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
      <class name="com.capsulecrm.qa.util.BasicExtentReport">
        <test-method status="PASS" signature="startReport(java.lang.String, java.lang.String)[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="startReport" is-config="true" duration-ms="95" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="testCase1()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="testCase1" duration-ms="6" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="getResult" is-config="true" duration-ms="5" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase1 status=SUCCESS method=BasicExtentReport.testCase1()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testCase2()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="testCase2" duration-ms="0" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method status="PASS" signature="testCase3()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="testCase3" duration-ms="1" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase2 status=SUCCESS method=BasicExtentReport.testCase2()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="testCase4()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="testCase4" duration-ms="1" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.capsulecrm.qa.util.BasicExtentReport.testCase4(BasicExtentReport.java:75)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase4 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase3 status=SUCCESS method=BasicExtentReport.testCase3()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="getResult" is-config="true" duration-ms="4" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase4 status=FAILURE method=BasicExtentReport.testCase4()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="testCase5()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="testCase5" duration-ms="1" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this test with exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this test with exception
at com.capsulecrm.qa.util.BasicExtentReport.testCase5(BasicExtentReport.java:81)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase5 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="getResult" is-config="true" duration-ms="1" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase5 status=SKIP method=BasicExtentReport.testCase5()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.capsulecrm.qa.util.BasicExtentReport@39c0f4a]" name="tearDown" is-config="true" duration-ms="184" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.capsulecrm.qa.util.BasicExtentReport -->
    </test> <!-- Extent Report Test -->
    <test name="Test" duration-ms="38731" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:30:05Z">
      <class name="com.capsulecrm.qa.testcases.AddPerson_Test">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.capsulecrm.qa.testcases.AddPerson_Test@72b6cbcc]" name="setUp" is-config="true" duration-ms="7676" started-at="2019-06-04T17:29:47Z" finished-at="2019-06-04T17:29:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="addNewPerson(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.capsulecrm.qa.testcases.AddPerson_Test@72b6cbcc]" name="addNewPerson" duration-ms="990" started-at="2019-06-04T17:29:54Z" data-provider="getNewUserData" finished-at="2019-06-04T17:29:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstname_xls]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[lastname_xls]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tags_xls]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[+91-9876543210]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[test@dataprovider.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewPerson -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.capsulecrm.qa.testcases.AddPerson_Test@72b6cbcc]" name="tearDown" is-config="true" duration-ms="591" started-at="2019-06-04T17:29:55Z" finished-at="2019-06-04T17:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.capsulecrm.qa.testcases.AddPerson_Test@72b6cbcc]" name="setUp" is-config="true" duration-ms="7283" started-at="2019-06-04T17:29:56Z" finished-at="2019-06-04T17:30:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="addNewCase(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.capsulecrm.qa.testcases.AddPerson_Test@72b6cbcc]" name="addNewCase" duration-ms="1433" started-at="2019-06-04T17:30:03Z" data-provider="getNewCaseData" finished-at="2019-06-04T17:30:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[QA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test Lost Car]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test Automation]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Car]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewCase -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.capsulecrm.qa.testcases.AddPerson_Test@72b6cbcc]" name="tearDown" is-config="true" duration-ms="583" started-at="2019-06-04T17:30:05Z" finished-at="2019-06-04T17:30:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.capsulecrm.qa.testcases.AddPerson_Test -->
      <class name="com.capsulecrm.qa.testcases.LoginPage_Test">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.capsulecrm.qa.testcases.LoginPage_Test@1efed156]" name="setUp" is-config="true" duration-ms="5302" started-at="2019-06-04T17:29:26Z" finished-at="2019-06-04T17:29:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="loginTest()[pri:0, instance:com.capsulecrm.qa.testcases.LoginPage_Test@1efed156]" name="loginTest" duration-ms="2488" started-at="2019-06-04T17:29:32Z" finished-at="2019-06-04T17:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.capsulecrm.qa.testcases.LoginPage_Test@1efed156]" name="tearDown" is-config="true" duration-ms="578" started-at="2019-06-04T17:29:34Z" finished-at="2019-06-04T17:29:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.capsulecrm.qa.testcases.LoginPage_Test -->
      <class name="com.capsulecrm.qa.testcases.TestRun">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.capsulecrm.qa.testcases.TestRun@6737fd8f]" name="setUp" is-config="true" duration-ms="4474" started-at="2019-06-04T17:29:35Z" finished-at="2019-06-04T17:29:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="robotClass()[pri:0, instance:com.capsulecrm.qa.testcases.TestRun@6737fd8f]" name="robotClass" duration-ms="290" started-at="2019-06-04T17:29:39Z" finished-at="2019-06-04T17:29:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- robotClass -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.capsulecrm.qa.testcases.TestRun@6737fd8f]" name="tearDown" is-config="true" duration-ms="591" started-at="2019-06-04T17:29:40Z" finished-at="2019-06-04T17:29:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.capsulecrm.qa.testcases.TestRun@6737fd8f]" name="setUp" is-config="true" duration-ms="5483" started-at="2019-06-04T17:29:40Z" finished-at="2019-06-04T17:29:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRun()[pri:0, instance:com.capsulecrm.qa.testcases.TestRun@6737fd8f]" name="testRun" duration-ms="1" started-at="2019-06-04T17:29:46Z" finished-at="2019-06-04T17:29:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRun -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.capsulecrm.qa.testcases.TestRun@6737fd8f]" name="tearDown" is-config="true" duration-ms="588" started-at="2019-06-04T17:29:46Z" finished-at="2019-06-04T17:29:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.capsulecrm.qa.testcases.TestRun -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
